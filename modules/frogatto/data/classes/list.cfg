{
add:        "def(list list_one, list list_two) -> decimal zip(list_one, list_two, a+b)",
subtract:   "def(list list_one, list list_two) -> decimal zip(list_one, list_two, a-b)",
multiply:   "def(list list_one, list list_two) -> decimal zip(list_one, list_two, a*b)",
divide:     "def(list list_one, list list_two) -> decimal zip(list_one, list_two, a/b)",
increment:  "def(list list_one, decimal by) -> decimal map(list_one, value + by)",
decrement:  "def(list list_one, decimal by) -> decimal map(list_one, value - by)",
scale:      "def(list list_one, decimal by) -> decimal map(list_one, value * by)",
scale_down: "def(list list_one, decimal by) -> decimal map(list_one, value / by)",
tween:      "def(list list_one, list list_two, decimal percent_raw) -> list map(range(size(list_one)), 'index', list_one[index]*(percent) + list_two[index]*(1.0-percent)) where percent = lib.math.constrain(0, percent_raw, 1)",
}
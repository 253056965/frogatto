{
id: "standard_values",

# rationale for this file:
#  Multiple basic prototypes use these values, and previously redundantly had them as literal constants.
#  Objects based on prototypes can't refer to the properties in said prototype if they redeclare them - they frequently do to put that value in a conditional, and they have to redeclare it as yet another redundant copy of this constant.
properties: {
	standard_thrown_damage: 400,
	kill_anything:  20000,		#a large int meant to be fatal to anything
	
	lower_difficulty: "level.player.difficulty < level.player.difficulty_challenging",
	higher_difficulty: "level.player.difficulty > level.player.difficulty_casual",

# further rationale:
#  certain functions are truly global, but need the convenience of being properties for easy access to the referring object's scope
	sound_falloff: "def(sound_name, falloff_dist, max_volume) sound(sound_name, volume) where volume = constrain(0, decimal(falloff_dist)/distance(self, level.player),max_volume)",
	

},
}
{
id: "padlock",
zorder: "@include data/zorders.cfg:player",
zsub_order: -10,
on_start_level: "[ if(level.player.vars.stored_events[event_name] = 1, remove_object(me)),
					add(variations, [vars.color]),animation('normal')]",
on_unlock: "[ level.player.store_event(event_name, 1),
				impact_cloud(mid_x,mid_y,'large'),
				map([0]*1d2, spawn('bouncing_debris_chunk',x+1d10, y+1d10, if(1d2=2,1,-1), [add(variations, ['metal_flat']),child.init_vel('burst')])),
				map([0]*1d2, spawn('bouncing_debris_chunk',x+1d10, y+1d10, if(1d2=2,1,-1), [add(variations, ['metal_round']),child.init_vel('burst')])),
				sound('BlockBreak.ogg'),die()]",
no_compile_image: "props/locks.png",
editor_info: {
	category: "props",
	help: "Place this on top of a door to lock it - the door will autodetect the lock
		visually sitting there, and become locked.  To make the game remember that the act
		of unlocking has happened, you have to set a matching event name in both the lock
		and the key - once set, they will cease being there when you enter the level.",
	var: [
		{
			name: "color",
			type: "enum",
			value: "'gold'",
			enum_values: "gold,silver,green,red,purple,blue,cyan",
		},
		{
			name: "event_name",
			type: "text",
			value: "''",
		},
	],
},
animation: {
	image: "props/locks.png",
	id: "normal",
	rect: [0,0,15,15],

	#gold is the default
	duration: 10000,
},
variations: {
	gold:	"null",
	silver:	"[map(filter(doc.animation, value.rect = [0,0,15,15]), 'anim', set(anim.rect, [16,0,31,15]))]",
	green:	"[map(filter(doc.animation, value.rect = [0,0,15,15]), 'anim', set(anim.rect, [32,0,47,15]))]",
	red:	"[map(filter(doc.animation, value.rect = [0,0,15,15]), 'anim', set(anim.rect, [48,0,63,15]))]",
	purple:	"[map(filter(doc.animation, value.rect = [0,0,15,15]), 'anim', set(anim.rect, [64,0,79,15]))]",
	blue:	"[map(filter(doc.animation, value.rect = [0,0,15,15]), 'anim', set(anim.rect, [80,0,95,15]))]",
	cyan:	"[map(filter(doc.animation, value.rect = [0,0,15,15]), 'anim', set(anim.rect, [96,0,111,15]))]",
},
}

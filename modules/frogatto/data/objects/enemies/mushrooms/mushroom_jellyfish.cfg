{
id: "mushroom_jellyfish",

friction: 4000,
always_active: true,
prototype: ["ant_flying"],
properties: {
	altitude_adjustment: "(wave(cycle*5+1000)/50)",
	
	dive_speed_x: "if(higher_difficulty, 12+1d12, 12)",
	dive_speed_y: "if(higher_difficulty, 8+1d16, 8)",
	climb_speed_x: "if(higher_difficulty, 8, 5)",
	climb_speed_y: "if(higher_difficulty, 12, 8)",
	
	should_dive: "if(	
						level.player.y > y + 50 and level.player.y < vars.dive_height and
						level.player.midpoint_x > vars.x_bound and
						level.player.midpoint_x < vars.x2_bound, 1, 0)",

	should_climb: "if(midpoint_y > vars.dive_height or midpoint_y < vars.desired_height-20 or midpoint_x > vars.x2_bound or midpoint_x < vars.x_bound, 1, 0)",

	begin_dive: "def() [
								if(level.player.midpoint_x > midpoint_x, facing(1), facing(-1)),
								set(vars.behavior, 'dive'),
								set(vars.target_x, level.player.midpoint_x),
								set(vars.target_y, level.player.y),
								add(velocity_y,200)]",
	begin_climb: "def() [	set(vars.behavior, 'climb')]",
	process_dive: "def() [	if(level.player.midpoint_y > midpoint_y, add(velocity_y, dive_speed_y),add(velocity_y,-dive_speed_y) ),
								if(level.player.midpoint_x > midpoint_x, [try_facing(1),add(velocity_x, dive_speed_x)],[try_facing(-1),add(velocity_x,-dive_speed_x)] ),
							   	if(should_climb, begin_climb() )]",
	process_climb: "def() [	if(midpoint_x < init_x, [try_facing(1),add(velocity_x, climb_speed_x)],[try_facing(-1),add(velocity_x,-climb_speed_x)] ),
								if(midpoint_y < init_y, add(velocity_y, climb_speed_y),add(velocity_y,-climb_speed_y) ),
								if(should_hover, begin_hover())
									]",
	begin_hover: "def() [	set(vars.behavior, 'hover')]",
	process_hover: "def() [	if(midpoint_x < init_x, [try_facing(1),add(velocity_x, climb_speed_x)],[try_facing(-1),add(velocity_x,-climb_speed_x)] ),
								if(midpoint_y < init_y, add(velocity_y, climb_speed_y),add(velocity_y,-climb_speed_y) ),
								if(should_dive, begin_dive())
									]",
	should_hover: "if(abs(midpoint_x - vars.init_x) < 100 and abs(midpoint_y - vars.init_y) < 100, 1, 0)",

	try_facing: "def(direction) if(direction != facing,fire_event('turn'))",

	death_fx_type: "'mushroom'",
	acquirable_item_drop_value: 10,					
	points_value: 14,
	
	central_process: "def() [switch(vars.behavior,
							'', process_climb(),
							'hover', process_hover(),
							'dive', process_dive(),
							'climb', process_climb(),
							'regular', [proto_event('ant_flying', 'process_fly'), if(should_dive, begin_dive())]),
							set(rotate, sin(cycle*7) * 4.0),
							if(animation in ['fly1','fly2','fly3'], [set(animation, 'fly'+animation_suffix), set(time_in_animation, time_in_animation)])]",

	animation_suffix: "round(sin(cycle*4)*1.0+1.0)+1",  //smoothly oscillate between 1 -> 3

	springiness: 190,
	spring_amount: 1200,
	bounce_roundness: 1,
	default_animation: "fly1",
},
on_create: "[	if(vars.behavior = null,set(vars.behavior,'hover')),
						animation('fly1'),
						if(vars.init_x = null, set(vars.init_x, midpoint_x)),
						if(vars.init_y = null, set(vars.init_y, midpoint_y)),
					]",
on_end_anim: "animation('fly1')",
on_end_hurt_anim: "animation('fly1')",


on_turn: "if(cycle-vars.last_turned > 30,[set(vars.last_turned,cycle),set(facing, -facing)])", #symmetric creature, so overrule the usual turn behavior because we have no turn anim

on_process: "central_process()",
on_lose_wings: "#don't lose wings#",

on_wingflap: "[proto_event('ant_flying','wingflap'),add(velocity_y,-150)]",

platform_area: [7,13,20,14],
on_bounced_on: "add(velocity_y,450)",

#solid_area=5,10,20,25
solid_area: null,
editor_info: {
	category: "enemies, forest",
	var: [
		{
			name: "x_bound",
			type: "x",
			value: "x - 200",
		},
		{
			name: "x2_bound",
			type: "x",
			value: "x2 + 200",
		},
		{
			name: "desired_height",
			type: "y",
			value: "midpoint_y",
		},
		{
			name: "dive_height",
			type: "y",
			value: "midpoint_y+300",
		},
	],
},
animation: [
	{
		"@base": true,
		image: "enemies/mushroom-jellyfish.png",
		body_area: "all",
		accel_y: 0,
		feet_x: 14,
		feet_y: 25,
		pad: 2,
	},
	{
		id: "fly1",
		rect: [1,1,27,34],
		frames: 12,
		frames_per_row: 6,
		duration: 4,
		accel_x: 0,
		events: "8:wingflap",
		attack_area: [4,18,24,28],
	},
	{
		id: "fly2",
		rect: [1,73,27,106],
		frames: 12,
		frames_per_row: 6,
		duration: 4,
		accel_x: 0,
		events: "8:wingflap",
		attack_area: [4,18,24,28],
	},
	{
		id: "fly3",
		rect: [1,145,27,178],
		frames: 12,
		frames_per_row: 6,
		duration: 4,
		accel_x: 0,
		events: "8:wingflap",
		attack_area: [4,18,24,28],
	},
	{
		id: "spring",
		rect: [175,1,201,34],
		frames: 1,
		duration: 3,
	},
	{
		id: "turn",
		rect: [175,1,201,34],
		frames: 1,
		duration: 3,
		attack_area: [4,18,24,28],
	},
	{
		id: "hurt",
		rect: [204,1,230,34],
		frames: 1,
		duration: 18,
	},
],
object_type: {
	id: "thrown",
	prototype: ["throwable_small_enemy"],
	properties: {
		acquirable_item_drop_value: 10,					
		points_value: 14,
		default_anim: "fly1",
	},

	#specifically trigger death here because non-solid objects don't have a water-level
	on_enter_water: "[handle_death(null),die()]",
	on_die: "if(me.underwater, null, proto_event('throwable_small_enemy', 'die'))",
	animation: [
		{
			image: "enemies/mushroom-jellyfish.png",
			id: "thrown",
			thrown_area: "all",
			duration: 60,
			rect: [175,37,201,70],
			frames: 1,
			body_area: null,
		},
		{
			image: "enemies/mushroom-jellyfish.png",
			id: "on_back",
			rect: [175,37,201,70],
			frames: 2,
			pad:2,
			duration: 5,
			body_area: "all",
		},
	],
},
}

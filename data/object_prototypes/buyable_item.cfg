{
id: "buyable_item",
zorder: -5,
properties: {
	number_owned: "level.player.number_of_item(real_item_name)",
	final_price: "consts.price * (1 + number_owned)",
	real_item_name: "regex_replace(type,'buyable_','')", 
},
vars: {
	bob_offset: 10,
},
consts: {
	max_owned: 1,
	quantity: 1,
},
on_create: "[if(number_owned >= consts.max_owned, remove_object(me)),set(vars.bob_offset, 1d100)]",
on_interact: "[fire_event(level.player, 'start_interact')]",
on_bought: "level.player.add_item(real_item_name,consts.quantity)",
on_talk: "[set(level.player.time_in_animation_delta, 0),
	         if(level.player.vars.coins < final_price,
	            [
	             paused_speech_dialog(self, consts.description + [~The price is ${final_price} coins.~, ~You don't have enough money.~]),
				],
				[
				 paused_speech_dialog(self, consts.description + [~The price is ${final_price} coins.~]),
				 paused_speech_dialog(self, [~Do you want to buy the ${consts.name}?~,
				  ~Yes~, 	[
				  		fire_event('bought'),
				  		die(),
				  		sound('coins-buy.wav'),
				  		set(level.player.vars.coins, level.player.vars.coins - final_price),
				  		spawn('text_flash_negative',midpoint_x,midpoint_y-20,1,[set(child.vars.txt,'-'+me.final_price)])
				  		],
				  'default_skip', ~No~, []])
				]),
			    set(level.player.time_in_animation_delta, 1)]",
on_end_normal_anim: "animation('normal')",

on_process: "set(velocity_y, 50*sin((vars.bob_offset + cycle)*5+(0.5*1d2)))",

animation: {
	id: "normal",
	interact_area: "all",
},
}

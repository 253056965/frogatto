{
id: "item_acquirable",
prototype: ["standard_values"],
zorder: "@include data/zorder.cfg:player",
respawns: false,
collide_dimensions: ["~item"],

properties: {
	attractable: "false",  //categorically speaking, can this get pulled in by the "magnetic" attractor powerup?
	
	should_attract: "(attractable and _is_inside_attraction_range)",
	_has_started_attracting: { type: "bool", default: false },
	_is_inside_attraction_range: "(distance(me,level.player) < 200)",
	angle_to_player: "lib.math.angle(me, level.player)",
	attraction_speed: "50.0",
	
	
	process_attract: "if(_has_started_attracting and (not vars.been_acquired),
			[	
				add(velocity_x, x_diff) where x_diff = attraction_speed * cos(angle_to_player) * 0.8,
				add(velocity_y, y_diff) where y_diff = attraction_speed * sin(angle_to_player) * 0.8,
			])",
},

on_process: "[if(should_attract, set(_has_started_attracting,true)), process_attract]",

editor_info: {
	category: "props",
},
vars: {
	been_acquired: 0,
},

on_end_normal_anim: "animation('normal')",

on_collide_object_item: "if(collide_with.is_player_body_part and (not vars.been_acquired),fire_event('acquired'))",


// expected behaviors:
// on_acquired: "/* virtual; each object will need almost completely custom behavior for what it actually *does* when it's acquired, however we may want to unify the visual-effects stuff here. */",
// animation should have "item" area

}

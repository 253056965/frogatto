{
id: "kitty_sword",
prototype: ["hittable"],
always_active: true,
functions: "#looks for the player and turns to face it#	
	  def set_facing(obj,level) if(desired_facing != obj.facing, [animation('turn'),set(obj.facing, desired_facing)], animation('walk')
	           ) where desired_facing = if(level.player.x < obj.x, -1, 1);


	  #if the player is in an opportune spot, attack it#	
	  def consider_attacking(obj,level) if((desired_facing = obj.facing) and (abs(level.player.x - obj.x) < 150) and (abs(level.player.y - obj.y) < 50), animation('prepare_jump'), animation('walk')
	           ) where desired_facing = if(level.player.x < obj.x, -1, 1);
	1",
hitpoints: 2000,
solid_area: [13,9,33,34],
solid_dimensions: ["common"],
traction: 1000,
traction_in_air: 200,
friction: 1000,
editor_info: {
	category: "enemies, milgramen",
},

properties: {
	attack_damage: "if(higher_difficulty,3,1)",
	team: "'evil'",
	facing_player: "if(level.player.x < x, facing < 0, facing > 0)",
	damage_type:  "if( animation = 'lunge_attack', 'stab', 'slash')",
	flinch_threshold: 40,
	hurt_velocity_x: 0,
	hurt_velocity_y: 0,

	posthit_invicibility_period: "100",
	springiness: "200",
	charge_duration: "80",
	spring_amount: "1400",
	bounce_roundness: "200",
	points_value: "500",
	add_to_hud: "map(level.gui, set(gui_vars.bosses, current_bosses + [me]) where current_bosses = [object] <- gui_vars.bosses where gui_vars = object <- value.vars)",

	_began_charging: { type: "int", default: 0, persistent: false },
	_can_attack_at: { type: "int", default: 0, persistent: false },
	_stuck_count: { type: "int", default: 0, persistent: false },
},

on_create: "[if(lower_difficulty, set(max_hitpoints, 600)), add_to_hud]",
on_bounced_on: "if(is_invincible_posthit,null,[add(hitpoints, -200),set(time_last_hit, cycle), hurt_flash_sequence,display_posthit_invincibility_flash_sequence,  animation('spring'),sound('cat-growl-ornery.wav')])",
on_collide_side: "if(arg.collide_with = level.player,
   #make it so if we collide with the player we immediately jump/attack.
    this ensures the kitty can't simply get stuck between the player and a wall#
   animation('jump'),
  [
  if(animation = 'lunge_attack' and (not arg.collide_with),
		    [animation('lunge_stuck'), sound('sword-embed-in-wall.wav',0.6), add(x,-50*facing),set(velocity_x,0), set(_stuck_count, 0)]),
  if(not (animation in ['jump_attack', 'lunge_attack', 'lunge_stuck', 'lunge_unstuck']), [set(facing, -facing), animation('turn'), set(velocity_x, 0)])
		 ])",
on_end_hurt_anim: "animation('stand')",
on_end_jump_attack_anim: "[animation('walk'), set(_can_attack_at, cycle+50)]",
on_end_lunge_anim: "animation('walk')",
on_end_lunge_attack_anim: "[animation('walk')]",
on_end_prepare_lunge_anim: "if(cycle - _began_charging > charge_duration, [animation('lunge'), 	sound('weapon-swing-medium'+1d7+'.wav')],animation('prepare_lunge'))",
on_end_prepare_jump_anim: "if(cycle - _began_charging > charge_duration,fire_event('initiate_jump'),animation('prepare_jump'))",
on_end_lunge_stuck_anim: "if(_stuck_count > 4, animation('lunge_unstuck'), [animation('lunge_stuck'), add(_stuck_count, 1)])",
on_end_lunge_unstuck_anim: "animation('stand')",
on_end_spring_anim: "animation('stand')",
on_end_stand_anim: "if(is_standing, animation('walk'), animation('stand'))",
on_end_turn_anim: "animation('walk')",
on_end_walk_anim: "if((not facing_player),
  if(abs(level.player.mid_x - mid_x) < 800, set(facing, -facing)),

  if(cycle > _can_attack_at and abs(level.player.mid_x - mid_x) < (300 + 1d200),

   if((1d4 = 1) or (abs(level.player.y - y) > 50),
    [animation('prepare_jump'),sound('cat-hiss.wav'),set(_began_charging,cycle)],
	[animation('prepare_lunge'),sound('cat-hiss.wav'),set(_began_charging,cycle)]
	),

if(distance_to_cliff < 80, [set(facing, -facing), animation('turn')], animation('walk'))))",
on_initiate_jump: "[animation('jump'), if(level.player.x > mid_x,facing(1),facing(-1)),set(velocity_x, (level.player.mid_x - mid_x)*4), if(level.player.y > y2 and is_standing_on_platform, [set(fall_through_platforms, 20), set(velocity_y, 0)], if(mid_y - level.player.mid_y > 200, [set(velocity_y, -2200)]))]",
on_enter_water: "die()",
on_process_jump: "if(abs(level.player.mid_x - mid_x) < 80 and level.player.y2 > y,
                       [animation('jump_attack'),sound('weapon-swing-medium'+1d7+'.wav')],
						if(is_standing, animation('stand')))",
on_process_lunge: "if(abs(level.player.mid_x - mid_x) < 200,
                     animation('lunge_attack'))",
                     
on_swordpull: "sound('sword-pull'+1d7+'.wav',1.0)",
on_backpack_rustle: "sound('Backpack-rustle'+1d3+'.wav')",
                     
animation: [
	{
		"@base": true,
		image: "enemies/kitty-sword.png",
		pad: 3,
		body_area: "all",
		accel_x: 0,
		accel_y: 80,
	},
	{
		id: "stand",
		duration: 6,
		frames: 3,
		reverse: true,
		rect: [1,1,41,36],
		duplicates: 10,
	},

	#blink variation of standing
	{
		id: "stand",
		duration: 6,
		frames: 3,
		reverse: true,
		rect: [133,1,173,36],
	},
	{
		id: "turn",
		duration: 2,
		frames: 1,
		frames_per_row: 1,
		rect: [1,1,41,36],
	},
	{
		accel_x: 300,
		id: "walk",
		frames: 4,
		duration: 6,
		events: "0:12:footfall",
		rect: [295,41,332,76],
	},
	{
		id: "spring",
		duration: 2,
		frames: 5,
		rect: [1,40,51,75],
		reverse: true,
	},
	{
		id: "hurt",
		duration: 18,
		frames: 1,
		rect: [1,1,41,36],
	},
	{
		id: "prepare_lunge",
		duration: 2,
		frames: 3,
		frames_per_row: 3,
		rect: [1,79,41,114],
	},
	{
		accel_x: 2800,
		id: "lunge",
		duration: 10,
		frames: 3,
		rect: [133,79,173,114],
	},
	{
		accel_x: 2800,
		id: "lunge_attack",
		attack_area: [12,0,40,34],
		duration: 6,
		frames: 3,
		rect: [1,118,55,153],
	},
	{
		id: "lunge_stuck",
		duration: 5,
		frames: 3,
		solid_area: [10,9,30,34],
		rect: [1,157,55,192],
		events: "14:swordpull"
	},
	{
		id: "jump",
		duration: 10,
		frames: 3,
		events: "3:backpack_rustle",
		rect: [1,198,41,251],
		solid_area: [13,29,33,54],
		velocity_y: -1600,
	},
	{
		id: "prepare_jump",
		duration: 2,
		frames: 2,
		rect: [207,242,247,290],
	},
	{
		accel_x: -80,
		accel_y: 120,
		id: "jump_attack",
		attack_area: [12,0,40,34],
		duration: 10,
		frames: 3,
		events: "2:backpack_rustle,2:displeasure",
		rect: [1,255,60,290],
	},
	{
		id: "lunge_unstuck",
		duration: 10,
		frames: 1,
		solid_area: [10,10,30,35],
		rect: [181,157,235,192],
	},
],
}

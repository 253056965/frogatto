{
id: "gazer_boss",
prototype: ["hittable"],
always_active: true,
editor_info: {
	category: "boss",
},

properties: {
	attack_damage:  "if(true, kill_anything, 0)",
	team:  			"if(true, 'evil', 'evil_harmless')",
	
	title: "~Gazer Boss~",
	description: "~When you stare into The Great Eye, it also stares into you!  And fires death beams at you, because eyes totally do that sometimes.  Honest.~",
	taste: "~AHA!~",


	rotation_speed_max: "0.75 * _rotation_direction",
	rotation_speed: "if(cycle - _time_started_laser < 50, 
						lib.math.constrain(0, rotation_speed_max*((cycle - _time_started_laser)/ 50.0), rotation_speed_max),
						if(_time_started_laser + laser_duration - cycle < 50,
							lib.math.constrain(0, rotation_speed_max*((_time_started_laser + laser_duration - cycle)/ 50.0), rotation_speed_max),
							rotation_speed_max
						)
					)",


	process_behavior: "if(animation = 'normal',		switch(_state,
														'idle',				process_idle,
														'attack_laser',		process_laser,
														
													))",
		
	begin_laser: "commands :: [
									set(_rotation_direction, if(1d2=2, -1, 1)),
									set(_state,'attack_laser'),
									set(_time_started_laser,cycle), 
									add_object(_laser_beam),
									fire_event(_laser_beam,'create')
								]",
	stop_laser: "[
					remove_object(_laser_beam),
					fire_event(_laser_beam,'destroy'),
					set(_state, 'idle'),
					schedule(100+1d50,begin_laser)
				]",
	
	process_laser: "[
						add(rotate, rotation_speed),
						if(cycle - _time_started_laser > laser_duration, stop_laser),
						
					]",
	laser_duration: "300",
	
	process_idle: "commands :: null",
	
	custom_damage_table: "{
		neutral: 1.0,
		fire: 1.0,
		energy: 0.5,
		arcane: 0.25,
		acid: 0.0,
		impact: 0.0,
		impale: 1.0,
		lacerate: 1.0
	}",
	
	
							
								
#--------------------------  vars --------------------------#
	_rotation_direction:  { type: "int", init: "1" },
	_laser_beam: { type: "obj gazer_boss.beam", init: "object('gazer_boss.beam', mid_x, mid_y, {parent: me})" },
	_time_started_laser: { type: "int", init: "0", persistent: false },
	_state: { type: "string", default: "", persistent: false },
},
		
on_create:  "begin_laser",

on_process: "process_behavior",

animation: [
{
	"@base": true,
	image: "enemies/gazer-boss1.png",
	attack_area: "all",
	body_area: "all",
	no_remove_alpha_borders: true,
},
{
	id: "normal",
	rect: [1,1,125,125],
	frames:1,
	duration: 10,
},
],

object_type: [
	{
		id: "beam",
		always_active: true,
		serializable: false,
		zorder: 20,
		
		properties: {
			texture_offset: "0",
			beam_length: "800",
			
			draw_w: "img_w/2",
			pupil_offset: "64.0",
			width_coefficient: "img_w/pupil_offset * (decimal(0.5*img_h)/img_w)", //<- this is some black magic, here.   
			
			beam_angle: "parent.rotate - (90 - parent.rotation_speed) asserting parent is obj gazer_boss",

			offset: "{ x: decimal, y: decimal } :: { x: length * cos(beam_angle),
													 y: length * sin(beam_angle) - (beam_length - (width_coefficient) * pupil_offset)} where length = (pupil_offset + beam_length)", 

			update_attache: "[
								set(_the_attache.beam_angle, beam_angle),
								set(_the_attache.beam_distance, beam_length + pupil_offset)
							]",

			_the_attache: { type: "obj damage_beam_attache", init: "object('damage_beam_attache', mid_x, mid_y, {parent: parent, relative_x: 0, relative_y: 0})" },
		},
		
		on_create: "[add_object(_the_attache), set(_the_attache.mid_x, parent.mid_x), set(_the_attache.mid_y, parent.mid_y)] asserting parent != null",
		on_destroy: "[remove_object(_the_attache)]",
		
		on_process: "[
						update_attache,
						//debug(decimal(0.5*img_h)/img_w),
						//debug(draw_w/decimal(img_h)),
						set(relative_x, offset.x),
						set(relative_y, offset.y),
						set(rotate, parent.rotate),
						set(draw_area, [0, texture_offset, draw_w, beam_length])
		
					] asserting parent != null",
		
		on_end_anim: "animation('normal')",
		
		animation: [{
			id: "normal",
			image: "enemies/gazer-boss-beam1.png",
			rect: [0,0,72,31],
			frames: 6,
			reverse: true,
			pad: 0,
			duration: 2,
			no_remove_alpha_borders: true,
		}],

	}
],

}
{
id: "white_swaying_flower",
prototype: ["movable_enemy"],
solid_dimensions: ["enemy","common"],
editor_info: {
	category: "enemies, forest",
},
hitpoints: 200,
properties: {

	_segments: { type: "[obj white_swaying_flower.segment]", default: [] },

	create_segments: "[set(_segments, new_set_of_segments), schedule(1, bind_command(def() map(_segments, [value.attach_to_spawner, add_object(value)] )))]
			where new_set_of_segments = map(range(9), object('white_swaying_flower.segment',midpoint_x,midpoint_y,{facing: facing, _forced_parent_ref: me}))",

	position_segments: "map(_segments,  [
								set(value.mid_x, img_mid_x + new_pos.x),
								set(value.mid_y, img_mid_y + ((6 + new_pos.y) * upside_down) ),
								set(value.rotate, offset.x)
							]
							where new_pos = rotated_segment_position(offset.x, offset.y) 
							where offset = individual_segment_offset(index)
						)",
	
	vertical_spacing: "18 + 2* wobble(sin(cycle * 10))
							where wobble = def(decimal input) -> decimal sign(input) * lib.math.ease_in_out_elastic(abs(input)) ",
						
	individual_segment_offset: "def(int s_index) -> {x: decimal, y: decimal}
							{	
								x: (10.0 * sin(cycle*5.5 + spacing * s_index) * fraction),
								y: (vertical_spacing * s_index)
							}
								where spacing = decimal :: ( 360 / size(_segments) )
								where fraction = decimal :: lib.math.ease_out_quint(decimal(s_index) /(size(_segments)-1))",
								
	rotated_segment_position: "def( decimal angle, decimal distance ) -> {x: decimal, y: decimal}
									{
										x: distance * cos(_angle),
										y: distance * sin(_angle)
									} where _angle = angle + 90",
								
},

on_create: "create_segments",

on_process: "position_segments",

animation: [
	{
		id: "normal",
		no_remove_alpha_borders: true,
		image: "enemies/white-shooting-flower.png",
		body_area: "all",
		accel_y: 0,
		rect: [76,5,120,49],
	},
],

object_type: {
	id: "segment",
	prototype: ["hittable_attache"],
	zsub_order: 1,
	animation: [
		{
			image: "enemies/white-shooting-flower.png",
			no_remove_alpha_borders: true,
			id: "normal",
			duration: 60,
			rect: [6,5,24,23],
			frames: 1,
			body_area: "all",
		},
	],
},
}


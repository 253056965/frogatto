{
id: "padlock_key",
prototype: ["throwable"],
zorder: "@include data/zorder.cfg:player",
solid_dimensions: ["thrown"],
collide_dimensions: ["key"],

friction: 1000,
properties: {
	swallowable: "bool :: true",
	get_hit_by: "def(obj hittable collide_with) -> commands null",
	material_sound: "'smallmetal'",
	
	color: { type: "string", dynamic_initialization: true, editor_info: { type: "enum", value:"'gold'", enum_values: ["gold", "silver", "green", "red", "purple", "blue", "cyan"] } },
	event_name: { type: "string", default: "", editor_info: { type: "text" } },
	
	valid_levels: { type: "[string]", default: [] },
		
	set_to_animation: "def(string name) -> commands set(animation, { image: 'props/keys.png', accel_y: 80, body_area: 'all', duration: -1, id: name,
		rect: image_rect_for_color[color] })",
		
	image_rect_for_color: "{string->[int,int,int,int]} :: {
								'gold':			[0,0,15,15],
								'silver':		[16,0,31,15],
								'green':		[32,0,47,15],
								'red':			[48,0,63,15],
								'purple':		[64,0,79,15],
								'blue':			[80,0,95,15],
								'cyan':			[96,0,111,15]
							}",								
},
on_create: "[
				if(color = null, set(color, attributes['color'])),
				if(attributes['color'] = null, set(attributes['color'], color)),					
			]",
on_load: "fire_event('create')",

on_start_level: "[ if(level.player.get_stored_event(event_name) = 1, remove_object(me)) ]",
solid_area: [0,0,15,15],

on_collide_object_body: "if(arg.collide_with_area != null and arg.collide_with is obj hittable, if(arg.collide_with_area in ['attack'], get_hit_by(arg.collide_with)) where collide_with = (obj hittable <- arg.collide_with) )",
on_collide_side: "[set(velocity_x, -(velocity_x*70)/100), sound('collide-metal'+1d10+'.wav')]",
on_collide_head: "[set(velocity_y, -velocity_y), sound('collide-metal'+1d10+'.wav')]",
on_collide_feet: "[sound('collide-metal'+1d10+'.wav'),set(velocity_x, (velocity_x*50)/100), if(abs(velocity_x) < 50, set(velocity_x, 0)), set(velocity_y, if(abs(velocity_y) > 50, -velocity_y/2, 0))]",
no_compile_image: "props/keys.png",

on_end_anim: "set_to_animation('normal')",

editor_info: {
	category: "keys & triggers",
},

}

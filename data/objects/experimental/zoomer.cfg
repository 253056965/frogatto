{
id: "zoomer",
zorder: "@include data/zorder.cfg:wooden_scaffolding_background",
is_strict: true,
prototype: ["standard_values"],
editor_info: {
	category: "AWESOME",
},
properties: {
	search_length: "500",
	speed: "500",


	_moving_clockwise: { type:"bool", default: true },

	
	test_solidity: "def(int offset_x, int offset_y) -> int int(solid(level, mid_x+offset_x,mid_y+offset_y,1,1))",

	direction: "{x:int,y:int} :: {	x:  sign(
											#sides# 
										#bottom#	if(_moving_clockwise, 1, 0) *  s(0,1) * _not(s(1,0)) +
										#bottom#	if(_moving_clockwise, 0, -1) * s(0,1) * _not(s(-1,0)) +
										#top#		if(_moving_clockwise, -1, 0) * s(0,-1) * _not(s(-1,0)) +
										#top#		if(_moving_clockwise, 0, 1) * s(0,-1) * _not(s(1,0)) +
									
										#upper right concave corner#	if(_moving_clockwise, 0, -1) * s(1,0) * s(1,-1) * s(0,-1) +
										#lower right concave corner#	if(_moving_clockwise, 0, -1) * s(1,0) * s(1,1) * s(0,1) +
										#lower left concave corner#		if(_moving_clockwise, 1, 0) * s(-1,0) * s(-1,1) * s(0,1) +
										#upper left concave corner#		if(_moving_clockwise, 1, 0) * s(-1,0) * s(-1,-1) * s(0,-1) +

										#upper right convex corner#		if(_moving_clockwise, 0, -1) * _not(s(-1,0)) * s(-1,1) * _not(s(0,1)) +
										#lower right convex corner#		if(_moving_clockwise, -1, 0) * _not(s(-1,0)) * s(-1,-1) * _not(s(0,-1)) +
										#lower left convex corner#		if(_moving_clockwise, 0, 1) * _not(s(1,0)) * s(1,-1) * _not(s(0,-1)) +
										#upper left convex corner#		if(_moving_clockwise, 1, 0) * _not(s(1,0)) * s(1,1) * _not(s(0,1))
										),
										
									y:  sign(
											#sides# 
										#left#		if(_moving_clockwise, 1, 0) * s(-1,0) * _not(s(0,1)) +
										#left#		if(_moving_clockwise, 0, -1) * s(-1,0) * _not(s(0,-1)) +
										#right#		if(_moving_clockwise, -1, 0) * s(1,0) * _not(s(0,-1)) +
										#right#		if(_moving_clockwise, 0, 1) * s(1,0) * _not(s(0,1)) +
									
										#upper right concave corner#	if(_moving_clockwise, 0, 1) * s(1,0) * s(1,-1) * s(0,-1) +
										#lower right concave corner#	if(_moving_clockwise, -1, 0) * s(1,0) * s(1,1) * s(0,1) +
										#lower left concave corner#		if(_moving_clockwise, 0, -1) * s(-1,0) * s(-1,1) * s(0,1) +
										#upper left concave corner#		if(_moving_clockwise, 1, 0) * s(-1,0) * s(-1,-1) * s(0,-1) +
								
										#upper right convex corner#		if(_moving_clockwise, 1, 0) * _not(s(-1,0)) * s(-1,1) * _not(s(0,1)) +
										#lower right convex corner#		if(_moving_clockwise, 0, -1) * _not(s(-1,0)) * s(-1,-1) * _not(s(0,-1)) +
										#lower left convex corner#		if(_moving_clockwise, -1, 0) * _not(s(1,0)) * s(1,-1) * _not(s(0,-1)) +
										#upper left convex corner#		if(_moving_clockwise, 0, 1) * _not(s(1,0)) * s(1,1) * _not(s(0,1))
										)
								} where s = test_solidity where _not = def(foo) int(not foo)",



		//must place above flat ground
	set_initial_position: "[set(mid_x, new_pos.x),set(mid_y, new_pos.y-1)] where new_pos = find_floor(mid_x,mid_y,1000)", 
	
	
	move_forward: "[add(mid_x, direction.x), add(mid_y, direction.y)]",
	
},

on_create: "[set_initial_position]",

on_process: "move_forward",
//animation: {
//	id: "normal",
//	image: "props/forest-branches2.png",
//	rect: [0,0,47,47],
//	palettes: "@include data/palettes.cfg:forest_palettes",
//},
}
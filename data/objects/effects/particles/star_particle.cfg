{
id: "star_particle",
hitpoints: 1,
zorder: "@include data/zorder.cfg:in_front_of_everything",
properties: {
	_tracker: {type: "decimal", default: 0.12, persistent: false},
},
on_create: "[#set(brightness,512)#set(scale,0.10)]",

on_process: "[	set(scale,0.28-_tracker),
				add(rotate,8*facing),
				set(red,150+1d150), set(green,150+1d150), set(blue,150+1d150),
				set(_tracker,_tracker*0.95),
				set(alpha, max((alpha*98)/100,0)),

				add(velocity_y, 5),
				set(velocity_x, velocity_x*0.998),

				if(cycle>300,die())
				]",
animation: {
	id: "normal",
	no_remove_alpha_borders: true,
	image: "effects/star-particle.png",
	rect: [0,0,39,39],
	frames: 1,
	pad: 3,
	duration: 6,
	blend:["src_alpha","dst_alpha"],
},

object_type:	[{
	id: "burst", 
	
	properties: {
		pop_star: "def(int index) -> commands spawn('star_particle',mid_x,mid_y, {velocity_x: vel.x, velocity_y: vel.y})
		
				where vel = polar_to_cartesian(spawn_angle, 1d200+100)
				where spawn_angle = 120*index + 1d90",

		spawn_velocity:	"150",
		polar_to_cartesian:  "def(decimal angle, decimal mag) -> {x: decimal, y: decimal} {x:  mag * cos(angle), y: mag * sin(angle) }",
		
		spawn_stars: "commands :: map(range(10), schedule(1d20,(spawn('star_particle',mid_x + spawn_pos_offset.x, mid_y + spawn_pos_offset.y,
		{velocity_x: vel.x, velocity_y: vel.y - 1d100, rotate: spawn_angle }))
		
				where vel = polar_to_cartesian(spawn_angle, spawn_velocity)
				where spawn_pos_offset = polar_to_cartesian(spawn_angle, spawn_offset_distance)
				where spawn_angle = value * 36 +1d15
				where spawn_offset_distance = 15))",
				
		schedule_sparkles: "map(range(6), schedule( 8*value + 1d5, pop_star(value)))",
	},

	on_create: "[spawn_stars, schedule_sparkles]",
	on_process: "if(cycle > 60, die())",	
	
	animation: {
		id: "normal",
		no_remove_alpha_borders: true,
		image: "effects/star-particle.png",
		rect: [0,0,1,1],
		frames: 1,
		duration: 6,
	},
}],
}
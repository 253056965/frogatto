{
	"air_resistance": 20,
	"auto_move_camera": [0,0],
	"character": [
		{
			"_addr": "0x10647fa00",
			"current_frame": "normal",
			"custom": true,
			"is_human": true,
			"label": "_dec9380",
			"objects_destroyed": {
				"level": "tempo-village-house-3.cfg",
				"objects": []
			},
			"type": "frogatto_playable",
			"x": 773,
			"y": 384
		},
		{
			"_addr": "0x1064a1600",
			"current_frame": "normal",
			"custom": true,
			"face_right": false,
			"label": "_18f1b942",
			"type": "broom",
			"x": -288,
			"y": 192
		},
		{
			"_addr": "0x106557400",
			"current_frame": "normal",
			"custom": true,
			"label": "_7a67a83e",
			"type": "potbelly_stove",
			"x": 832,
			"y": 320
		},
		{
			"_addr": "0x106557c00",
			"current_frame": "normal",
			"custom": true,
			"label": "_40f418f9",
			"type": "potbelly_stove",
			"x": 96,
			"y": 320
		},
		{
			"_addr": "0x1065abc00",
			"current_frame": "normal",
			"custom": true,
			"label": "_73c9d3fe",
			"type": "refrigerator",
			"x": -256,
			"y": 160
		},
		{
			"_addr": "0x1065ac400",
			"current_frame": "normal",
			"custom": true,
			"label": "_722ec4bf",
			"type": "wooden_table",
			"x": -160,
			"y": 224
		},
		{
			"_addr": "0x1065ad400",
			"current_frame": "normal",
			"custom": true,
			"label": "_250023b1",
			"type": "seaside_interior_window",
			"x": 320,
			"y": 192
		},
		{
			"_addr": "0x1065adc00",
			"current_frame": "normal",
			"custom": true,
			"label": "_b9e30ef",
			"type": "seaside_interior_window",
			"x": 608,
			"y": 192
		},
		{
			"_addr": "0x1065ae400",
			"current_frame": "normal",
			"custom": true,
			"label": "_51f75a23",
			"type": "dish_cabbage",
			"x": -149,
			"y": 194
		},
		{
			"_addr": "0x1065aec00",
			"current_frame": "normal",
			"custom": true,
			"label": "_31565097",
			"type": "dish_carrots",
			"x": -111,
			"y": 195
		},
		{
			"_addr": "0x1065af400",
			"current_frame": "normal",
			"custom": true,
			"label": "interior_door",
			"property_data": {
				"_dest_door": "house_door",
				"_dest_level": "prosperas-promontory.cfg"
			},
			"type": "seaside_house_interior_door",
			"x": 464,
			"y": 320
		},
		{
			"_addr": "0x10669d000",
			"current_frame": "normal",
			"custom": true,
			"face_right": false,
			"label": "prospera",
			"property_data": {
				"turning_behaviour": "face_player",
				"start_mode": "stand",
				"max_x": 993,
				"min_x": 593
			},
			"type": "prospera_npc",
			"x": 954,
			"y": 347
		},
		{
			"_addr": "0x104cc8e00",
			"current_frame": "normal",
			"custom": 1,
			"face_right": 0,
			"on_start_level": "if( not level.player.get_stored_event('continued_initial_prospera_conversation'), scene_setup,
							if( level.player.get_stored_event('finished_initial_prospera_conversation'), remove_object(me))
						)
						
			where scene_setup = [
									title(~Some time later...~,200),
									set(frogatto.facing, 1),
									set(level.zoom, 0.75),
									fire_event(camera_obj,'triggered'),
									frogatto.add_control_lock([], 'prospera_cutscene'),
									schedule(40, set(prospera.animation, 'emote_confused')),
								]
								
			where prospera = (obj prospera_npc <- get_object_or_die(level, 'prospera'))
			where frogatto = (obj frogatto_playable <- level.player)
						
			where camera_obj = get_object_or_die(level, 'camera1')",

			"property_data": {
				"_x2_bound": 1232,
				"_x_bound": 448,
				"_y2_bound": 2618,
				"_y_bound": 2154
			},

			"type": "level_controller",
			"x": 773,
			"y": 394
		},
		{
			"_addr": "0x105c76400",
			"current_frame": "normal",
			"custom": 1,
			"label": "conversation_controller",
			"on_triggered": "[
				level.player.store_event('continued_initial_prospera_conversation', 1),
				set(level.focus, [prospera, frogatto]),
			
				speech_dialog(
						set(level.zoom, 1.5),

									set(prospera.animation, 'emote_annoyed'),
						prospera,	[~...well, I can't say that it's wise, but I\\nadmire your wiliness on that whole Milgram thing.~],
									set(prospera.animation, 'emote_emphatic'),
									[~I still think it's crazy, but at least\\nit's a fun kind of crazy.~],
									set(prospera.animation, 'emote_talk'),
									[~Beats dying of old age, huh?~],
									set(frogatto.animation, 'emote_confused'),
						frogatto,	[~I'll keep that in mind if I need a uh ...\\nepitaph, I guess. ~],
									set(frogatto.animation, 'emote_geez'),
									[~This isn't very encouraging.~],
									set(prospera.animation, 'emote_annoyed'),
						prospera,	[~It wasn't meant to be.~],
									set(prospera.animation, 'emote_talk'),
									[~Nevertheless, regarding more pressing matters...\\nyou were wondering how you could help me out?~],
									set(prospera.animation, 'emote_emphatic'),
									[~I've got a few things that come to mind.~],
									[~...~],
									set(prospera.animation, 'emote_confused'),
									[~More than anything, it at first would be worth\\nexplaining my whole situation here.~],
									set(prospera.animation, 'emote_emphatic'),
									[~Has anyone given you the whole\\nrundown on the mushroom thing?~,
										~Yes~, [speech_dialog(
														set(frogatto.animation, 'emote_nod'),
											frogatto,	[~I've been thoroughly briefed.~],
														set(prospera.animation, 'emote_talk'),
											prospera, 	[~Okay, then I'll skip to the point.~],
														set(prospera.animation, 'emote_emphatic'),
														[~So those mushrooms are pretty dangerous.~],
										)],
										~No~, [speech_dialog(
														set(prospera.animation, 'emote_annoyed'),
											prospera,	[~Well, if you want the long version\\nyou can talk to a fellow in town named Whatran.~],
														set(prospera.animation, 'emote_annoyed'),
														[~He's got nothing better to do with his time.~],
														set(prospera.animation, 'emote_emphatic'),
														[~So the short story is there's\\na swamp due east of town.~],
														set(prospera.animation, 'emote_talk'),
														[~Has been for a long time.~],
														set(prospera.animation, 'emote_annoyed'),
														[~I'm still trying to figure out the 'why'\\nbehind this, but basically we have an infestation.~],
														set(prospera.animation, 'emote_talk'),
														[~The biology around here is odd enough\\nthat <em>ambulatory</em> mushrooms aren't actually\\na new thing, believe it or not.~],
														set(frogatto.animation, 'emote_talk'),
											frogatto,	[~Really?~],
														set(prospera.animation, 'emote_emphatic'),
											prospera,	[~Says the talking frog.~],
														set(prospera.animation, 'emote_surprised'),
														[~There's some really strange and interesting\\nstuff going on on this island.~],
														set(prospera.animation, 'emote_annoyed'),
														[~It's not really my area of expertise, though,\\nand I'd like to stay on topic.~],
														set(prospera.animation, 'emote_annoyed'),
														[~So, the walking mushroom thing quickly\\ngraduated from intellectual curiosity,\\nto serious menace, overnight.~],
														set(prospera.animation, 'emote_talk'),
														[~Suddenly, they were boiling out of the swamp\\nlike crazy, and sprouting from spores outside.~],
														set(prospera.animation, 'emote_talk'),
														[~And they're actually dangerous;\\nnot much more than the average predator,\\nit's mostly just numbers and gestation rate.~],
										)],
									],
									set(prospera.animation, 'emote_annoyed'),
									[~'Combat' isn't really in my wheelhouse, per se,\\nbut I <em>am</em> a witch.  I can make do.~],
									set(prospera.animation, 'emote_talk'),
									[~And I'm pretty good at being a witch, too.\\nSo I'm managing all right here.~],
									set(frogatto.animation, 'emote_raisedfinger'),
						frogatto,	[~I'm curious...\\nyou're officially protecting the town?~],
									set(prospera.animation, 'emote_emphatic'),
						prospera,	[~Ha, no.  It's not official,\\nand I'm honestly under no obligation to do it.~],
									set(prospera.animation, 'emote_annoyed'),
									[~I can just pack up and leave if I want.\\nHowever that's just it - I <em>don't</em> want to.~],
									set(prospera.animation, 'emote_talk'),
									[~This is a nice place to live,\\nfilled with decent, honest people.~],
									set(prospera.animation, 'emote_surprised'),
									[~Some people don't realize how\\n<em>hard</em> that is to find!~],
									set(prospera.animation, 'emote_annoyed'),
									[~Sure, this current crisis isn't 'my' problem...\\nbut I'd be a fool to not <em>make</em> it mine.~],
									set(frogatto.animation, 'emote_oh'),
						frogatto,	[~I see...~],
									set(prospera.animation, 'emote_annoyed'),
						prospera,	[~So that's the pain point:\\n<em>I'm stuck here.</em>~],
									set(prospera.animation, 'emote_talk'),
									[~There are a lot of important errands I need\\nto run that I can't.  Proper 'Witch Stuff'.~],
									set(frogatto.animation, 'emote_confused'),
						frogatto,	[~Huh?~],
									set(prospera.animation, 'emote_annoyed'),
						prospera,	[~Basically, I'm worried that if I take too\\nlong of a field trip, the mushroom thing could\\nspiral out of control whilst I'm gone.~],
									set(prospera.animation, 'emote_surprised'),
									[~Especially if I get incapacitated, somehow,\\ndoing something dangerous.~],
									set(prospera.animation, 'emote_emphatic'),
						prospera,	[~So I'm looking for some wild-eyed fools\\nto try and do some of these for me.~],
									set(frogatto.animation, 'emote_nod'),
						frogatto,	[~Okay.~],
									set(prospera.animation, 'emote_annoyed'),
						prospera,	[~So the first thing I've got on the plate\\nis a pretty tall order.~],
									[~...~],
									set(prospera.animation, 'emote_emphatic'),
									[~I need someone to kill the Iralchtahne of Essikoria.~,
										~I had that once...~, [speech_dialog(
														set(frogatto.animation, 'emote_raisedfinger'),
											frogatto, 	[~You know, I had a bad case of that once.\\nDue to certain personal ... indiscretions.~],
														set(frogatto.animation, 'emote_nod'),
														[~I found that a nice soothing cream really helped.~],
														[~...~],
														set(frogatto.animation, 'emote_confused'),
														[~Tough crowd, huh?~],
														set(prospera.animation, 'emote_annoyed'),
											prospera,	[~Can we be serious here?~],
														set(prospera.animation, 'emote_talk'),
														[~So this Iralchtahne thing is a monster.~],
														set(prospera.animation, 'emote_emphatic'),
														[~It's a giant stone eyeball, it's really dangerous,\\nsomeone needs to take it out.~],
														set(prospera.animation, 'emote_talk'),
														[~It's located in a mine - formerly operated by the\\n'Nobun Mining Company', just east of here.~],
														set(prospera.animation, 'emote_annoyed'),
														[~You can't miss it.  It's got a sign.~],
														set(frogatto.animation, 'emote_confused'),
											frogatto,	[~What were they mining?~],
														set(prospera.animation, 'emote_talk'),
											prospera,	[~Eyeball monsters.~],
														set(frogatto.animation, 'emote_geez'),
											frogatto,	[~I thought we're being serious...~],
														set(prospera.animation, 'emote_emphatic'),
											prospera,	[~Well, technically they <em>did</em> dig one up.\\nThat still counts!~],
														set(prospera.animation, 'emote_talk'),
														[~Regardless, you should go to the bottom of the mine.~],
										)],
										~Who is that?~, [speech_dialog(
														set(frogatto.animation, 'emote_geez'),
											frogatto,	[~I'm not big on politics, but I'm\\npretty sure I have no idea who that is.~],
														set(prospera.animation, 'emote_annoyed'),
											prospera,	[~It's not a 'who', it's a 'what'.\\n'Proper Witch Stuff', like I said.~],
														set(frogatto.animation, 'emote_confused'),
											frogatto,	[~Welp.~],
														set(prospera.animation, 'emote_talk'),
											prospera,	[~Yes, it's a giant stone eye.~],
														set(prospera.animation, 'emote_emphatic'),
														[~Well, not really stone;\\nit's mostly amateria, but it looks like carved rock.~],
														set(prospera.animation, 'emote_annoyed'),
														[~It lives in a cave near here, and I need it dead.~],
														set(frogatto.animation, 'emote_geez'),
											frogatto,	[~Well, wait, hold on, you need it <em>dead</em>?\\nThat sounds kinda unfair.~],
														set(frogatto.animation, 'emote_geez'),
														[~What did it do to you?~],
														set(prospera.animation, 'emote_surprised'),
											prospera,	[~The hell?  What do you mean?\\nIt's <em>Pure Evil</em>!~],
														set(prospera.animation, 'emote_annoyed'),
														[~Well... okay maybe it's just 'Very Evil.'~],
														set(frogatto.animation, 'emote_geez'),
											frogatto,	[~That's ridiculous though - I mean, what's the deal?\\nIt's predatory?  That's not <em>evil.</em>~],
														set(frogatto.animation, 'emote_oh'),
														[~Things have to eat!\\nIt's hardly 'free will' if the alternative is starving.~],
														set(prospera.animation, 'emote_confused'),
											prospera,	[~Look, it was created as a killing machi...\\n... uh... actually, forget it.~],
														set(prospera.animation, 'emote_emphatic'),
														[~Let's try this a different way.~],
														set(prospera.animation, 'emote_annoyed'),
														[~Would you be willing to set aside all this highfaluting\\nmoral relativism in exchange for ample compensation?~],
														set(frogatto.animation, 'emote_confused'),
											frogatto,	[~...~],
														set(frogatto.animation, 'emote_raisedfinger'),
														[~I love rewards!~],
														set(prospera.animation, 'emote_talk'),
											prospera,	[~Wonderful.  I'm glad you see things my way.~],				
														set(prospera.animation, 'emote_emphatic'),
														[~So without further ado, here's the game plan:~],
														set(prospera.animation, 'emote_annoyed'),
														[~Go east and you'll find a cave\\nmarked 'Nobun Mining Company'.~],
														set(prospera.animation, 'emote_emphatic'),
														[~Go in that thing, quite a long ways down,\\nand you'll find something that looks like a temple.~],
										)],
										~Sounds dangerous.~, [speech_dialog(
														set(frogatto.animation, 'emote_confused'),
											frogatto,	[~That sounds dangerous, whatever it is.~],
														set(prospera.animation, 'emote_annoyed'),
											prospera,	[~Exceedingly.\\nWe still don't know a lot about it.~],
														set(prospera.animation, 'emote_emphatic'),
														[~It's a large, magic construct in the shape of an eye.\\nA sort of golem, if you will.~],
														set(prospera.animation, 'emote_annoyed'),
														[~Moreover, there are signs it has a limited ability\\nto self-replicate, which is always deeply concerning.~],
														set(prospera.animation, 'emote_annoyed'),
														[~These sorts of things need to be nipped in the bud;\\nit's built quite a few small ones already.~],
														set(prospera.animation, 'emote_surprised'),
														[~Honestly, we don't know what it was originally\\nbuilt for, but it's clearly hostile.\\nIt already attacked the miners.~],
														set(frogatto.animation, 'emote_geez'),
											frogatto,	[~Miners?~],
														set(prospera.animation, 'emote_emphatic'),
											prospera,	[~Yes - the Nobun Mining Company had an\\nindustrial concern going just east of here.~],
														set(prospera.animation, 'emote_talk'),
														[~They accidentally dug into a pre-existing\\nstructure at the bottom of the mine.~],
														set(prospera.animation, 'emote_surprised'),
														[~The Iralchtahne apparently was housed inside,\\nalong with some of its replicants.~],
														set(prospera.animation, 'emote_confused'),
														[~All of the miners fled; a few of them were killed.~],
														set(prospera.animation, 'emote_annoyed'),
														[~It's still mostly using that original structure\\nas a home of sorts, down at the bottom of the mine.~],
										)]
									],
									set(prospera.animation, 'emote_talk'),
									[~That's where you'll find it.~],
									set(frogatto.animation, 'emote_geez'),
						frogatto,	[~Okay.  How do I kill it?~],
									set(prospera.animation, 'emote_emphatic'),
						prospera,	[~No special trick, really.\\nJust plenty of brute force.~],
									set(frogatto.animation, 'emote_confused'),
						frogatto,	[~Okay.  Anything I need to watch out for?~],
									set(prospera.animation, 'emote_emphatic'),
						prospera,	[~It can shoot death beams out of its eye.~],
									set(frogatto.animation, 'emote_oh'),
						frogatto,	[~Death Beams.  I'll keep that in mind.\\nThat's pretty important.~],
									set(frogatto.animation, 'emote_confused'),
									[~You know, this uh...~],
									set(frogatto.animation, 'emote_geez'),
									[~This actually sounds kinda suicidal.~],
									set(frogatto.animation, 'emote_geez'),
									[~Is there anything you can do to prep me?\\nAny tools or anything?~],
						prospera,	[~...~],
									set(prospera.animation, 'emote_annoyed'),
									[~I'm going to be perfectly honest here.\\nI really don't know who the hell you think you are.~],
									set(prospera.animation, 'emote_annoyed'),
									[~You're nice and you're a good talker.\\nFunny, even.~],
									set(prospera.animation, 'emote_talk'),
									[~But if I'm placing bets...~],
									set(prospera.animation, 'emote_emphatic'),
									[~I don't expect you to try to do this,\\nbecause nobody's actually stupid enough to try.~],
									set(prospera.animation, 'emote_annoyed'),
									[~You're shooting the breeze to try to con me\\nout of ... whatever you're after.  I don't know.~],
									set(prospera.animation, 'emote_annoyed'),
									[~It's cute, it's been fun talking to you, but\\nI'm not giving you some priceless magic artifact\\njust so you can take home a souvenir.~],
									set(prospera.animation, 'emote_confused'),
									[~My apologies if this character study is <em>unfair</em>,\\nbut please...  I'm not a chump.~],
									set(prospera.animation, 'emote_talk'),
									[~No hard feelings.~],
									set(frogatto.animation, 'emote_impatient'),
						frogatto,	[~Eh.~],
									set(frogatto.animation, 'emote_geez'),
									[~None taken, I guess.~],
									set(frogatto.animation, 'emote_confused'),
									[~That's an awkward note to step out on, but\\nuh...  I'll keep you posted.~],
									set(prospera.animation, 'emote_annoyed'),
						prospera,	[~Good luck, either way.~],
						
						set(level.focus, []),							
						frogatto.remove_control_lock('prospera_cutscene'),
						level.player.store_event('finished_initial_prospera_conversation', 1),
						remove_object(me)


				),
			] 	

				where prospera = (obj prospera_npc <- get_object_or_die(level, 'prospera'))
				where frogatto = (obj frogatto_playable <- level.player)",

			"property_data": {
				"_x2_bound": 1232,
				"_x_bound": 448,
				"_y2_bound": 2618,
				"_y_bound": 2154
			},
			"type": "level_controller",
			"x": 773,
			"y": 394
		},
		{
			"_addr": "0x104ce6800",
			"current_frame": "normal",
			"custom": 1,
			"label": "camera1",
			"on_cut": "[
				set(level.player.control_lock, null),
				set(level.zoom, 1.0)
			]",
			"on_roll": "[
				screen_flash([0,0,0,255], [0,0,0,-1], 255),
				set(starting_camera_position, [900,0]),
				set(level.player.control_lock, []),
				set_path(([
//					[(prospera.mid_x+frogatto.mid_x)/2, (prospera.mid_y+frogatto.mid_y)/2]
					[(prospera.mid_x+frogatto.mid_x)/2, (prospera.y+frogatto.y)/2]
				] where prospera = (obj prospera_npc <- get_object_or_die(level, 'prospera')), frogatto = level.player )),
			]",
			"property_data": {
				"average_path": false,
				"linked_object": "conversation_controller",
				"passepartout": "standard",
				"path": [],
				"release_control": false,
				"speed": 9,
				"start_with_player_as_first_node": true,
				"target_zoom": 1.5,
				"tween_type": "ease_out_quart"
			},
			"type": "camera_controller",
			"x": -64,
			"y": -256
		},
		
		
	],
	"dimensions": [-416,-448,1663,599],
	"id": "prosperas-house.cfg",
	"music": "prospera-theme.ogg",
	"palettes": ["interior_forest"],
	"preloads": "",
	"segment_height": 0,
	"segment_width": 0,
	"serialized_objects": {
		"character": []
	},
	"set_screen_resolution_on_entry": false,
	"tile_map": [
		{
			"tiles": "ins,
ins,
ins,
ins,
ins,
ins,
ins,
ins,
ins,
ins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ins
ins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ins
ins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ins
ins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ins
ins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,,,,,,,ins
,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,,,,,,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,,,,,,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,,,,,,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins
,,,,,,,,,,,,,,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins,ins",
			"unique_tiles": ",ins",
			"variations": "",
			"x": -352,
			"x_speed": 100,
			"y": -416,
			"y_speed": 100,
			"zorder": "interior_background_tiles"
		},
		{
			"tiles": ",
,
,
,
,
,
,
,
,
,
,
,
,
,",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "interior_back_wall_decor"
		},
		{
			"tiles": "int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int
,
,
,",
			"unique_tiles": ",int",
			"variations": "",
			"x": -672,
			"x_speed": 100,
			"y": -640,
			"y_speed": 100,
			"zorder": "interior_solid_ground_tiles"
		},
		{
			"tiles": ",
,
,
,
,
,
,
,
,,,,,,,,,,,,,iss,,,,iss
,,,,,,,,,,,,,iss,,,,iss
,,,,,,,,,,,,,iss,,,,iss
,,,,,,,,,,,,,iss,,,,iss
,,,,,,,,,,,,,iss,,,,iss
,,,,,,,,,,,,,iss,,,,iss
,,,,,,,,,,,,,iss,,,,iss
,,,,,,,,,,,,,iss,,,,iss
,,,,,,,,,,,,,iss,,,,iss",
			"unique_tiles": ",iss",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": -96,
			"y_speed": 100,
			"zorder": "pillars"
		},
		{
			"tiles": ",
,
,
,
,
,
,
,
,
,
,
,
,
,",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "elevator_shafts"
		},
		{
			"tiles": ",
,
,
,
,
,
,
,
,
,
,
,
,",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "elevator_shafts_horizontal"
		},
		{
			"tiles": ",
,
,
,
,
,
,
,
,
,
,
,
,
,
,,,,,,,,,,isb,isb,isb,isb,isb,isb
,,,,,,,,,,,,,,,,isb
,,,,,,,,,,,,,,,,,isb
,,,,,,,,,,,,,,,,,,isb
,,,,,,,,,,,,,,,,,,,isb
,
,
,",
			"unique_tiles": ",isb",
			"variations": "",
			"x": -224,
			"x_speed": 100,
			"y": -160,
			"y_speed": 100,
			"zorder": "interior_shelves_and_stairs"
		},
		{
			"tiles": ",
,
,
,
,
,
,
,
,
,
,
,
,
,",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "wooden_platform_objects"
		},
		{
			"tiles": ",
,
,
,
,
,
,
,
,
,
,
,
,
,",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "interior_decor"
		},
		{
			"tiles": ",
,
,
,
,
,
,
,
,
,
,
,
,
,",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "npcs"
		},
		{
			"tiles": ",
,
,
,
,
,
,
,
,
,
,
,
,
,",
			"unique_tiles": "",
			"variations": "",
			"x": 0,
			"x_speed": 100,
			"y": 0,
			"y_speed": 100,
			"zorder": "player"
		}
	],
	"title": "",
	"touch_controls": true,
	"vars": {
	},
	"version": "1.4",
	"water_resistance": 100,
	"xscale": 100,
	"yscale": 100
}